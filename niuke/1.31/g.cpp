#include<bits/stdc++.h>
using namespace std;
#define ll long long
const ll maxn=1000000LL;
ll o[maxn+5LL];
void getEuler()
{
    memset(o,0,sizeof(o));
    o[1]=1;
    for(int i=2;i<=maxn;i++)
    {
        if(!o[i])
        {
            for(int j=i;j<=maxn;j+=i)
            {
                if(!o[j])
                    o[j]=j;
                o[j]=o[j]/i*(i-1);
            }
        }
    }
}
int pr[maxn+5];
void ge()
{
    memset(pr,0,sizeof(pr));
    for(int i=2;i<=maxn;i++)
    {
        if(!pr[i])
            pr[++pr[0]]=i;
        for(int j=1;j<=pr[0] && pr[j]<=maxn/i;j++)
        {
            pr[pr[j]*i]=1;
            if(i%pr[j]==0)
                break;
        }
    }
}
int cnt(int n)
{

			int ans = 1;
			for (int i = 1; pr[i]*pr[i] <= n; i++)
			{
			  //  cout<<i<<" "<<pr[i]<<endl;
				int num = 0;		//num表示相同因子的个数
				while (n%pr[i] == 0)        //统计该数字m能被当前枚举的质数i整除多少次(事实上如果不是质数这里是不会进入循环的，因为此时已经被比非质数i小的质数分解过了)
				{
					num++;
					n= n / pr[i];
				}
				if (num > 0)         //如果可以被此质数整除，则加一(加上零次方的可能性)
				{
					num++;
					ans = ans * num;
				}
			}
			if (n > 1) ans = ans * 2;    //如果已经把小于根号m的数字都枚举过了但还未将m分解完，则说明还有一个大于根号m的质数约数，因此乘以2
			//printf("%d\n", ans);

    return ans;
}
int cn[1000005];
int maxx[305];
int mn[305];
int used[305]={0,1,2,4,6,16,12,64,24,36,48,1024,60,4096,192,144,120,65536,180,262144,240,576,3072,0,360,1296,12288,900,960,0,720,0,840,9216,196608,5184,1260,0,786432,36864,1680,0,2880,0,15360,3600,0,0,2520,46656,6480,589824,61440,0,6300,82944,6720,0,0,0,5040,0,0,14400,7560,331776,46080,0,983040,0,25920,0,10080,0,0,32400,0,746496,184320,0,15120,44100,0,0,20160,0,0,0,107520,0,25200,0,0,0,0,0,27720,0,233280,230400,45360,0,0,0,430080,129600,0,0,50400,0,414720,0,60480,0,0,0,0,921600,0,0,55440,0,0,0,0,810000,100800,0,83160,0,0,0,322560,0,0,176400,0,0,0,0,181440,0,0,0,110880,0,0,0,0,0,226800,0,0,0,0,0,0,0,0,0,166320,0,352800,0,0,0,0,0,221760,0,0,0,0,0,0,0,967680,0,0,0,277200,0,0,0,0,0,0,0,0,705600,0,0,332640,0,0,0,0,0,0,0,498960,0,0,0,0,0,0,0,0,0,907200,0,0,0,0,0,554400,0,0,0,0,0,0,0,665280,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,720720,0,0};
int main ()
{

    int t;
    cin>>t;
    int n;
    while(t--)
    {

        scanf("%d",&n);
        if(n>240 || used[n]==0)
        {
            printf("%d\n",-1);
        }
        else
        {
                printf("%d\n",used[n]);
//            printf("%d\n",upper_bound())
        }

    }
    return 0;
}
